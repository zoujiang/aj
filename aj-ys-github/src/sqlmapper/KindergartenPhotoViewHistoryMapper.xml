<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qm.mapper.KindergartenPhotoViewHistoryMapper">
  <resultMap id="BaseResultMap" type="com.qm.entities.KindergartenPhotoViewHistory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="photo_id" jdbcType="INTEGER" property="photoId" />
    <result column="category" jdbcType="INTEGER" property="category" />
    <result column="grade_id" jdbcType="INTEGER" property="gradeId" />
    <result column="kindergarten_id" jdbcType="INTEGER" property="kindergartenId" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, photo_id, category, grade_id, kindergarten_id, create_time, user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_kindergarten_photo_view_history
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_kindergarten_photo_view_history
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qm.entities.KindergartenPhotoViewHistory">
    insert into t_kindergarten_photo_view_history (id, photo_id, category, 
      grade_id, kindergarten_id, create_time, 
      user_id)
    values (#{id,jdbcType=INTEGER}, #{photoId,jdbcType=INTEGER}, #{category,jdbcType=INTEGER}, 
      #{gradeId,jdbcType=INTEGER}, #{kindergartenId,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, 
      #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qm.entities.KindergartenPhotoViewHistory">
    insert into t_kindergarten_photo_view_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="photoId != null">
        photo_id,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="gradeId != null">
        grade_id,
      </if>
      <if test="kindergartenId != null">
        kindergarten_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="photoId != null">
        #{photoId,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        #{category,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null">
        #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="kindergartenId != null">
        #{kindergartenId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qm.entities.KindergartenPhotoViewHistory">
    update t_kindergarten_photo_view_history
    <set>
      <if test="photoId != null">
        photo_id = #{photoId,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null">
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="kindergartenId != null">
        kindergarten_id = #{kindergartenId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qm.entities.KindergartenPhotoViewHistory">
    update t_kindergarten_photo_view_history
    set photo_id = #{photoId,jdbcType=INTEGER},
      category = #{category,jdbcType=INTEGER},
      grade_id = #{gradeId,jdbcType=INTEGER},
      kindergarten_id = #{kindergartenId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectTotalByCondition" parameterType="java.util.HashMap" resultType="java.lang.Integer">
  
  	select count(DISTINCT grade_id ) totalGrade from t_kindergarten_photo_view_history where user_id = #{userId} and create_time >= #{startTime} and  #{endTime} >= create_time 
  </select>
</mapper>